name: Deploy to Amazon ECS
on:
  push:
    branches:
      - master
env:
  AWS_REGION: us-east-1
  ECS_CLUSTER: app_cluster
  CONTAINER_NAME: app
  ECS_SERVICE: app_service
  ECS_TD: .github/workflows/td.json

jobs:
  deploy:
    name: deploy
    runs-on: ubuntu-latest
    environment: dev
    steps:
      - name: Checkout
        uses: actions/checkout@v3

      - name: Configure AWS credentials
        uses: aws-actions/configure-aws-credentials@v1
        with:
          aws-access-key-id: "AKIA2NAWOIQYTFYMWQBQv"
          aws-secret-access-key: "QcZG+r/OTQtw2xtOQrGsE2QnQ8lhFDdE+SOKQQc9"
          aws-region: ${{ env.AWS_REGION }}

      - name: Build, tag, and push image to Amazon ECR
        id: build-image
        env:
          ECR_REGISTRY: "715159127089.dkr.ecr.us-east-1.amazonaws.com"
          ECR_REPOSITORY: "app_repo"
          IMAGE_TAG: latest
        run:
          docker build -t $ECR_REGISTRY/$ECR_REPOSITORY:$IMAGE_TAG
          docker push $ECR_REGISTRY/$ECR_REPOSITORY:$IMAGE_TAG
          echo "::set-output name=image::$ECR_REGISTRY/$ECR_REPOSITORY:$IMAGE_TAG"

      - name: Fill in the new image ID in the Amazon ECS task definition
        id: task-def-1
        uses: aws-actions/configure-aws-credentials@v1
        with:
          task-definition: ${{ env.ECS_TD }}
          container-name: ${{ env.CONTAINER_NAME }}
          image: ${{ steps.build-image.outputs.image }}

      - name: Deploy Amazon ECS task definition 
        uses: aws-actions/configure-aws-credentials@v1
        with:
          task-definition: ${{ steps.task-def-1.outputs.task-definition }}
          service: ${{ env.ECS_SERVICE }}
          cluster: ${{ env.ECS_CLUSTER }}
          wait-for-service-stability: true

